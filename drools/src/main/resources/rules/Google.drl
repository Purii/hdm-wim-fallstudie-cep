//created on: 10.01.2017
package de.hdm.wim

//list any import classes here.
import de.hdm.wim.ComplexTokenEvent
import de.hdm.wim.Event


//declare any global variables here
declare Event
	@role(event)
end
declare ComplexTokenEvent
	@role(event)
end

declare window CurrentEvent
	Event() over window:length(1)
end

declare window LastEvents
	// Aktuelle wird mitgezaehlt
	Event() over window:length(2)
end

declare window LastComplexTokenEvent
	ComplexTokenEvent() over window:length(1)
end


rule "Identify (Google) Calendar"
	no-loop
	when
		Event(
			token == "appointment"
			|| token == "meeting"
			|| token == "calendar"
		) from window CurrentEvent
		// Nur aktuellstes und damit geltendes ComplexTokenEvent beachten
		$complexTokenEvent : ComplexTokenEvent() from window LastComplexTokenEvent
	then
		modify($complexTokenEvent) {
			addTopic(ComplexTokenEvent.CALENDAR);
		}
end


rule "Identify Google Drive"
	no-loop
	when
		Event(
			token == "drive"
			|| token == "google drive"
			|| token == ComplexTokenEvent.DRIVE
		) from window CurrentEvent
		// Nur aktuellsten und damit geltenden ComplexTokenEvent beachten
		$complexTokenEvent : ComplexTokenEvent() from window LastComplexTokenEvent
	then
		modify($complexTokenEvent) {
			addTopic(ComplexTokenEvent.DRIVE)
		}
end

// Durch Aggregation kann aus zwei Events ein einzelnes Event mit vereinheitlichtem Vokabular erstellt werden
rule "Merge separated Google Drive"
	when
		$prevToken : Event(
			token == "google"
		) from window LastEvents
		$nextToken : Event(
			token == "drive",
			this after $prevToken
		)
	then
		// Das Event $prevToken entfernen, da dessen Bedeutung $nextToken hinzugef√ºgt wird
		retract($prevToken);
		modify($nextToken) {
			setToken(ComplexTokenEvent.DRIVE);
		}
end
