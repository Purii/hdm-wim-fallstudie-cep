package de.hdm.wim

//list any import classes here.
import de.hdm.wim.ComplexTokenEvent
import de.hdm.wim.Event

//declare any global variables here
declare Event
	@role(event)
end

declare ComplexTokenEvent
	@role(event)
end

declare window CurrentEvent
	Event() over window:length(1)
end

declare window LastEvents
	// Aktuelle wird mitgezaehlt
	Event() over window:length(2)
end

declare window LastComplexTokenEvent
	ComplexTokenEvent() over window:length(1)
end

rule "Identify topic projectdocuments"
	// Modify will cause infinite loop
	no-loop
	when
		Event(
			 token == "documents"
			|| token == ComplexTokenEvent.PROJECTDOCUMENTS
		) from window CurrentEvent
		// Only most recent ComplexTokenEvent
		$complexTokenEvent : ComplexTokenEvent() from window LastComplexTokenEvent
	then
		modify($complexTokenEvent) {
			addTopic(ComplexTokenEvent.PROJECTDOCUMENTS)
		}
end

rule "Merge separated current activities"
	when
		$prevToken : Event(
			token == "current"
		) from window LastEvents
		$nextToken : Event(
			token == "activities",
			this after $prevToken
		)
	then
		retract($prevToken);
		modify($nextToken) {
			setToken(ComplexTokenEvent.PROJECTDOCUMENTS);
		}
end

rule "Merge separated cost documents"
	// Modify will cause infinite loop
	no-loop
	when
		Event(
			token == "expenses"
			|| token == "expense"
		)  from window CurrentEvent
		$complexTokenEvent : ComplexTokenEvent() from window LastComplexTokenEvent
	then
		modify($complexTokenEvent) {
			addTopic(ComplexTokenEvent.COSTDOCUMENTS)
		}
end