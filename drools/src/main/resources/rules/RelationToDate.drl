//created on: 12.01.2017
package de.hdm.wim

//list any import classes here.
import de.hdm.wim.ComplexTokenEvent
import de.hdm.wim.Event

import java.time.DayOfWeek
import java.time.LocalDate
import java.time.temporal.TemporalAdjusters

//declare any global variables here
declare Event
	@role(event)
end

declare ComplexTokenEvent
	@role(event)
end

declare window CurrentEvent
	Event() over window:length(1)
end

declare window LastComplexTokenEvent
	ComplexTokenEvent() over window:length(1)
end

rule "Identify next {Monday, Tuesday,..}"
	when
		$prevToken : Event(
			token == "next"
		) from window LastEvents
		Event(
			token == ComplexTokenEvent.DATE_MONDAY,
			$dayOfWeek : DayOfWeek.MONDAY,
			this after $prevToken
		)
		or Event(
			token == ComplexTokenEvent.DATE_TUESDAY,
			$dayOfWeek : DayOfWeek.TUESDAY,
			this after $prevToken
		)
		or Event(
			token == ComplexTokenEvent.DATE_WEDNESDAY,
			$dayOfWeek : DayOfWeek.WEDNESDAY,
			this after $prevToken
		)
		or Event(
			token == ComplexTokenEvent.DATE_THURSDAY,
			$dayOfWeek : DayOfWeek.THURSDAY,
			this after $prevToken
		)
		or Event(
			token == ComplexTokenEvent.DATE_FRIDAY,
			$dayOfWeek : DayOfWeek.FRIDAY,
			this after $prevToken
		)
		or Event(
			token == ComplexTokenEvent.DATE_SATURDAY,
			$dayOfWeek : DayOfWeek.SATURDAY,
			this after $prevToken
		)
		or Event(
			token == ComplexTokenEvent.DATE_SUNDAY,
			$dayOfWeek : DayOfWeek.SUNDAY,
			this after $prevToken
		)
		$complexTokenEvent : ComplexTokenEvent() from window LastComplexTokenEvent
	then
		LocalDate today = LocalDate.now();
		LocalDate nextDay = today.with( TemporalAdjusters.next( $dayOfWeek ) );
		retract($prevToken);
		modify($complexTokenEvent) {
			setRelatedToDate(nextDay)
		}
end

rule "Identify previous {Monday, Tuesday,..}"
	when
		$prevToken : Event(
			token == "previous"
			|| token == "last"
		) from window LastEvents
		Event(
			token == ComplexTokenEvent.DATE_MONDAY,
			$dayOfWeek : DayOfWeek.MONDAY,
			this after $prevToken
		)
		or Event(
			token == ComplexTokenEvent.DATE_TUESDAY,
			$dayOfWeek : DayOfWeek.TUESDAY,
			this after $prevToken
		)
		or Event(
			token == ComplexTokenEvent.DATE_WEDNESDAY,
			$dayOfWeek : DayOfWeek.WEDNESDAY,
			this after $prevToken
		)
		or Event(
			token == ComplexTokenEvent.DATE_THURSDAY,
			$dayOfWeek : DayOfWeek.THURSDAY,
			this after $prevToken
		)
		or Event(
			token == ComplexTokenEvent.DATE_FRIDAY,
			$dayOfWeek : DayOfWeek.FRIDAY,
			this after $prevToken
		)
		or Event(
			token == ComplexTokenEvent.DATE_SATURDAY,
			$dayOfWeek : DayOfWeek.SATURDAY,
			this after $prevToken
		)
		or Event(
			token == ComplexTokenEvent.DATE_SUNDAY,
			$dayOfWeek : DayOfWeek.SUNDAY,
			this after $prevToken
		)
		$complexTokenEvent : ComplexTokenEvent() from window LastComplexTokenEvent
	then
		LocalDate today = LocalDate.now();
		LocalDate prevDay = today.with( TemporalAdjusters.previous( $dayOfWeek ) );
		retract($prevToken);
		modify($complexTokenEvent) {
			setRelatedToDate(prevDay)
		}
end