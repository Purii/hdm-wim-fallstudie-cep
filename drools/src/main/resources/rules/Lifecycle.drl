//created on: 09.01.2017
package de.hdm.wim

//list any import classes here.
import de.hdm.wim.LifecycleEvent
import de.hdm.wim.ComplexToken


//declare any global variables here
declare ComplexToken
	@role(event)
end

declare window LastComplexTokenEvent
    ComplexToken() over window:length(1)
end

rule "Start Lifecycle of ComplexToken"
	// Modify will cause infinite loop
	lock-on-active true
    when
        LifecycleEvent(token == "start") and
        not ($ComplexToken : ComplexToken(
        	restrictedToProject != null
        ) from window LastComplexTokenEvent)
        
    then
        insert(new ComplexToken());

end


rule "Start Lifecycle of ComplexToken when there is already a project"
	// Modify will cause infinite loop
	lock-on-active true
    when
        (LifecycleEvent(token == "start") and
        $ComplexToken : ComplexToken(
        	restrictedToProject != null
        ) from window LastComplexTokenEvent)
        
    then
    	ComplexToken $nextComplexToken = new ComplexToken();
    	$nextComplexToken.setRestrictedToProject($ComplexToken.getRestrictedToProject());
        insert($nextComplexToken);

end


rule "End Lifecycle of ComplexToken"
	// Modify will cause infinite loop
	lock-on-active true
    when
        LifecycleEvent(token == "end")
		// Only most recent ComplexToken
       	$complexToken : ComplexToken() from window LastComplexTokenEvent
       	
    then
    	System.out.println($complexToken);

end